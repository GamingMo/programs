import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
data=pd.read_csv("regression.csv")
print(data)
x=data.iloc[:,:1]
print("INDEPENDENT VARIABLE",x)
y=data.iloc[:,-1]
print("DEPENDENT VARIABLE",y)
x1=np.array(x)
y1=np.array(y)
#plt.plot(x1,y1)
from sklearn import linear_model
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=4)
lm=linear_model.LinearRegression()
model=lm.fit(x_train,y_train)
y_pred = model.predict(x_test)
print("Testing",y_test)
print("y_prediction")
print(y_pred)
plt.scatter(np.array(x_test),np.array(y_test), color='g')
plt.plot(np.array(x_test),np.array(y_pred), color='r')
plt.show()
print('\n Coefficients : \n', model.coef_)
from sklearn.metrics import mean_squared_error,r2_score
print('Mean Squared Error : %.2f' % mean_squared_error(y_test, y_pred))
print('Coefficient of determination : %.2f' % r2_score(y_test,y_pred))
??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
find s
??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
import pandas as pd
import numpy as np
data=pd.read_csv("Book1.csv")
print(data,"n")
d=np.array(data)[:,:-1]
print("The attributes are :\n",d)
target=np.array(data)[:,-1]
print("The target is :",target)
def train(d,target):
    for i,val in enumerate(target):
        if val=="Yes":
            specific_hypothesis=d[i].copy()
            break
    for i,val in enumerate(d):
        if target[i]=="Yes":
            for x in range(len(specific_hypothesis)):
                if val[x]!=specific_hypothesis[x]:
                    specific_hypothesis[x]='?'
                else:
                    pass
    return specific_hypothesis
print("The final hypothesis is :",train(d,target))
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
candidate
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
import numpy as np

import pandas as pd

data = pd.DataFrame(data=pd.read_csv('Book1.csv'))

print(data)
concepts = np.array(data.iloc[:,0:-1])

target = np.array(data.iloc[:,-1])

print(target)

print(concepts)
def learn(concepts, target):

    specific_h = concepts[0].copy()

    print("Initialization of specific_h and general_h")

    print("specific_h: ",specific_h)

    general_h = [["?" for i in range(len(specific_h))] for i in range(len(specific_h))]

    print("general_h: ",general_h)

    print("concepts: ",concepts)

    for i, h in enumerate(concepts):

        if target[i] == "yes":

            for x in range(len(specific_h)):

                #print("h[x]",h[x])

                if h[x] != specific_h[x]:

                    specific_h[x] = '?'

                    general_h[x][x] = '?'

        if target[i] == "no":

            for x in range(len(specific_h)):

                if h[x] != specific_h[x]:

                    general_h[x][x] = specific_h[x]

                else:

                    general_h[x][x] = '?'

    print("\nSteps of Candidate Elimination Algorithm: ",i+1)

    print("Specific_h: ",i+1)

    print(specific_h,"\n")

    print("general_h :", i+1)

    print(general_h)

    indices = [i for i, val in enumerate(general_h) if val == ['?', '?', '?', '?', '?', '?']]

    print("\nIndices",indices)

    for i in indices:

        general_h.remove(['?', '?', '?', '?', '?', '?'])

    return specific_h, general_h

s_final,g_final = learn(concepts, target)

print("\nFinal Specific_h:", s_final, sep="\n")

print("Final General_h:", g_final, sep="\n")

